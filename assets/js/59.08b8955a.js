(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{336:function(a,t,s){"use strict";s.r(t);var n=s(11),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"java-内存管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java-内存管理"}},[a._v("#")]),a._v(" Java 内存管理")]),a._v(" "),s("blockquote",[s("p",[s("strong",[a._v("📦 本文以及示例源码已归档在 "),s("a",{attrs:{href:"https://github.com/dunwu/javacore/",target:"_blank",rel:"noopener noreferrer"}},[a._v("javacore"),s("OutboundLink")],1)])])]),a._v(" "),s("h2",{attrs:{id:"一、内存简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、内存简介"}},[a._v("#")]),a._v(" 一、内存简介")]),a._v(" "),s("h3",{attrs:{id:"物理内存和虚拟内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#物理内存和虚拟内存"}},[a._v("#")]),a._v(" 物理内存和虚拟内存")]),a._v(" "),s("p",[a._v("所谓物理内存就是通常所说的 RAM（随机存储器）。")]),a._v(" "),s("p",[a._v("虚拟内存使得多个进程在同时运行时可以共享物理内存，这里的共享只是空间上共享，在逻辑上彼此仍然是隔离的。")]),a._v(" "),s("h3",{attrs:{id:"内核空间和用户空间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内核空间和用户空间"}},[a._v("#")]),a._v(" 内核空间和用户空间")]),a._v(" "),s("p",[a._v("一个计算通常有固定大小的内存空间，但是程序并不能使用全部的空间。因为这些空间被划分为内核空间和用户空间，而程序只能使用用户空间的内存。")]),a._v(" "),s("h3",{attrs:{id:"使用内存的-java-组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用内存的-java-组件"}},[a._v("#")]),a._v(" 使用内存的 Java 组件")]),a._v(" "),s("p",[a._v("Java 启动后，作为一个进程运行在操作系统中。")]),a._v(" "),s("p",[a._v("有哪些 Java 组件需要占用内存呢？")]),a._v(" "),s("ul",[s("li",[a._v("堆内存：Java 堆、类和类加载器")]),a._v(" "),s("li",[a._v("栈内存：线程")]),a._v(" "),s("li",[a._v("本地内存：NIO、JNI")])]),a._v(" "),s("h2",{attrs:{id:"二、运行时数据区域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、运行时数据区域"}},[a._v("#")]),a._v(" 二、运行时数据区域")]),a._v(" "),s("p",[a._v("JVM 在执行 Java 程序的过程中会把它所管理的内存划分为若干个不同的数据区域。这些区域都有各自的用途，以及创建和销毁的时间，有的区域随着虚拟机进程的启动而存在，有些区域则依赖用户线程的启动和结束而建立和销毁。如下图所示：")]),a._v(" "),s("p",[s("img",{attrs:{src:"http://dunwu.test.upcdn.net/cs/java/javacore/jvm/jvm-memory-runtime-data-area.png!zp",alt:"img"}})]),a._v(" "),s("h3",{attrs:{id:"程序计数器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#程序计数器"}},[a._v("#")]),a._v(" 程序计数器")]),a._v(" "),s("p",[s("strong",[s("code",[a._v("程序计数器（Program Counter Register）")])]),a._v(" 是一块较小的内存空间，它可以看做是"),s("strong",[a._v("当前线程所执行的字节码的行号指示器")]),a._v("。")]),a._v(" "),s("p",[a._v("为了线程切换后能恢复到正确的执行位置，每条线程都需要一个独立的程序计数器，各条线程间的计数器互不影响，独立存储，我们称这类内存区域为 “线程私有” 的内存。")]),a._v(" "),s("ul",[s("li",[a._v("如果线程正在执行的是一个 Java 方法，这个计数器记录的是正在执行的虚拟机字节码指令的地址；")]),a._v(" "),s("li",[a._v("如果正在执行的是 Native 方法，这个计数器值则为空（Undefined）。")])]),a._v(" "),s("blockquote",[s("p",[a._v("🔔 注意：此内存区域是唯一一个在 JVM 中没有规定任何 "),s("code",[a._v("OutOfMemoryError")]),a._v(" 情况的区域。")])]),a._v(" "),s("h3",{attrs:{id:"java-虚拟机栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java-虚拟机栈"}},[a._v("#")]),a._v(" Java 虚拟机栈")]),a._v(" "),s("p",[s("strong",[s("code",[a._v("Java 虚拟机栈（Java Virtual Machine Stacks）")])]),a._v(" 也"),s("strong",[a._v("是线程私有的，它的生命周期与线程相同")]),a._v("。")]),a._v(" "),s("p",[a._v("每个 Java 方法在执行的同时都会创建一个栈帧（Stack Frame）用于存储 "),s("strong",[a._v("局部变量表")]),a._v("、"),s("strong",[a._v("操作数栈")]),a._v("、"),s("strong",[a._v("常量池引用")]),a._v(" 等信息。每一个方法从调用直至执行完成的过程，就对应着一个栈帧在 Java 虚拟机栈中入栈和出栈的过程。")]),a._v(" "),s("p",[s("img",{attrs:{src:"http://dunwu.test.upcdn.net/cs/java/javacore/jvm/jvm-stack.png!w640",alt:"img"}})]),a._v(" "),s("blockquote",[s("p",[a._v("🔔 注意：")]),a._v(" "),s("p",[a._v("该区域可能抛出以下异常：")]),a._v(" "),s("ul",[s("li",[a._v("如果线程请求的栈深度超过最大值，就会抛出 "),s("code",[a._v("StackOverflowError")]),a._v(" 异常；")]),a._v(" "),s("li",[a._v("如果虚拟机栈进行动态扩展时，无法申请到足够内存，就会抛出 "),s("code",[a._v("OutOfMemoryError")]),a._v(" 异常。")])]),a._v(" "),s("p",[a._v("💡 提示：")]),a._v(" "),s("p",[a._v("可以通过 "),s("code",[a._v("-Xss")]),a._v(" 这个虚拟机参数来指定一个程序的 Java 虚拟机栈内存大小：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("java "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Xss")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("512")]),a._v("M "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HackTheJava")]),a._v("\n")])])])]),a._v(" "),s("h3",{attrs:{id:"本地方法栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地方法栈"}},[a._v("#")]),a._v(" 本地方法栈")]),a._v(" "),s("p",[s("strong",[s("code",[a._v("本地方法栈（Native Method Stack）")])]),a._v(" 与虚拟机栈的作用相似。")]),a._v(" "),s("p",[a._v("二者的区别在于："),s("strong",[a._v("虚拟机栈为 Java 方法服务；本地方法栈为 Native 方法服务")]),a._v("。")]),a._v(" "),s("p",[s("img",{attrs:{src:"http://dunwu.test.upcdn.net/cs/java/javacore/jvm/jvm-native-method-stack.gif!w640",alt:"img"}})]),a._v(" "),s("blockquote",[s("p",[a._v("🔔 注意：本地方法栈也会抛出 "),s("code",[a._v("StackOverflowError")]),a._v(" 异常和 "),s("code",[a._v("OutOfMemoryError")]),a._v(" 异常。")])]),a._v(" "),s("h3",{attrs:{id:"java-堆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java-堆"}},[a._v("#")]),a._v(" Java 堆")]),a._v(" "),s("p",[s("strong",[s("code",[a._v("Java 堆（Java Heap）")]),a._v(" 的作用就是存放对象实例，几乎所有的对象实例都是在这里分配内存")]),a._v("。")]),a._v(" "),s("p",[a._v('Java 堆是垃圾收集的主要区域（因此也被叫做"GC 堆"）。现代的垃圾收集器基本都是采用'),s("strong",[a._v("分代收集算法")]),a._v("，该算法的思想是针对不同的对象采取不同的垃圾回收算法。")]),a._v(" "),s("p",[a._v("因此虚拟机把 Java 堆分成以下三块：")]),a._v(" "),s("ul",[s("li",[s("strong",[s("code",[a._v("新生代（Young Generation）")])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("Eden")])]),a._v(" "),s("li",[s("code",[a._v("From Survivor")])]),a._v(" "),s("li",[s("code",[a._v("To Survivor")])])])]),a._v(" "),s("li",[s("strong",[s("code",[a._v("老年代（Old Generation）")])])]),a._v(" "),s("li",[s("strong",[s("code",[a._v("永久代（Permanent Generation）")])])])]),a._v(" "),s("p",[a._v("当一个对象被创建时，它首先进入新生代，之后有可能被转移到老年代中。新生代存放着大量的生命很短的对象，因此新生代在三个区域中垃圾回收的频率最高。")]),a._v(" "),s("p",[s("img",{attrs:{src:"http://dunwu.test.upcdn.net/cs/java/javacore/jvm/jvm-heap.gif!w640",alt:"img"}})]),a._v(" "),s("blockquote",[s("p",[a._v("🔔 注意：Java 堆不需要连续内存，并且可以动态扩展其内存，扩展失败会抛出 "),s("code",[a._v("OutOfMemoryError")]),a._v(" 异常。")]),a._v(" "),s("p",[a._v("💡 提示：可以通过 "),s("code",[a._v("-Xms")]),a._v(" 和 "),s("code",[a._v("-Xmx")]),a._v(" 两个虚拟机参数来指定一个程序的 Java 堆内存大小，第一个参数设置初始值，第二个参数设置最大值。")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("java "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Xms")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("M "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Xmx")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v("M "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HackTheJava")]),a._v("\n")])])])]),a._v(" "),s("h3",{attrs:{id:"方法区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法区"}},[a._v("#")]),a._v(" 方法区")]),a._v(" "),s("p",[s("strong",[s("code",[a._v("方法区（Method Area）")]),a._v(" 用于存放已被加载的类信息、常量、静态变量、即时编译器编译后的代码等数据")]),a._v("。")]),a._v(" "),s("p",[a._v("对这块区域进行垃圾回收的主要目标是对常量池的回收和对类的卸载，但是一般比较难实现。")]),a._v(" "),s("blockquote",[s("p",[a._v("🔔 注意：和 Java 堆一样不需要连续的内存，并且可以动态扩展，动态扩展失败一样会抛出 "),s("code",[a._v("OutOfMemoryError")]),a._v(" 异常。")]),a._v(" "),s("p",[a._v("💡 提示：JDK 1.7 之前，HotSpot 虚拟机把它当成永久代来进行垃圾回收，JDK 1.8 之后，取消了永久代，用 **"),s("code",[a._v("metaspace（元数据）")]),a._v("**区替代。")])]),a._v(" "),s("h3",{attrs:{id:"运行时常量池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行时常量池"}},[a._v("#")]),a._v(" 运行时常量池")]),a._v(" "),s("p",[s("strong",[s("code",[a._v("运行时常量池（Runtime Constant Pool）")]),a._v(" 是方法区的一部分")]),a._v("，Class 文件中除了有类的版本、字段、方法、接口等描述信息，还有一项信息是常量池（Constant Pool Table），"),s("strong",[a._v("用于存放编译器生成的各种字面量和符号引用")]),a._v("，这部分内容会在类加载后被放入这个区域。")]),a._v(" "),s("p",[a._v("除了在编译期生成的常量，还允许动态生成，例如 "),s("code",[a._v("String")]),a._v(" 类的 "),s("code",[a._v("intern()")]),a._v("。这部分常量也会被放入运行时常量池。")]),a._v(" "),s("blockquote",[s("p",[a._v("🔔 注意：当常量池无法再申请到内存时会抛出 "),s("code",[a._v("OutOfMemoryError")]),a._v(" 异常。")])]),a._v(" "),s("h3",{attrs:{id:"直接内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#直接内存"}},[a._v("#")]),a._v(" 直接内存")]),a._v(" "),s("p",[a._v("直接内存（Direct Memory）并不是虚拟机运行时数据区的一部分，也不是 JVM 规范中定义的内存区域。")]),a._v(" "),s("p",[a._v("在 JDK 1.4 中新加入了 NIO 类，它可以使用 Native 函数库直接分配堆外内存，然后通过一个存储在 Java 堆里的 "),s("code",[a._v("DirectByteBuffer")]),a._v(" 对象作为这块内存的引用进行操作。这样能在一些场景中显著提高性能，因为避免了在 Java 堆和 Native 堆中来回复制数据。")]),a._v(" "),s("blockquote",[s("p",[a._v("🔔 注意：直接内存这部分也被频繁的使用，且也可能导致 "),s("code",[a._v("OutOfMemoryError")]),a._v(" 异常。")]),a._v(" "),s("p",[a._v("💡 提示：直接内存容量可通过 "),s("code",[a._v("-XX:MaxDirectMemorySize")]),a._v(" 指定，如果不指定，则默认与 Java 堆最大值（"),s("code",[a._v("-Xmx")]),a._v(" 指定）一样。")])]),a._v(" "),s("h3",{attrs:{id:"java-内存区域对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java-内存区域对比"}},[a._v("#")]),a._v(" Java 内存区域对比")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("内存区域")]),a._v(" "),s("th",[a._v("内存作用范围")]),a._v(" "),s("th",[a._v("异常")])])]),a._v(" "),s("tbody",[s("tr",[s("td",[a._v("程序计数器")]),a._v(" "),s("td",[a._v("线程私有")]),a._v(" "),s("td",[a._v("无")])]),a._v(" "),s("tr",[s("td",[a._v("Java 虚拟机栈")]),a._v(" "),s("td",[a._v("线程私有")]),a._v(" "),s("td",[s("code",[a._v("StackOverflowError")]),a._v(" 和 "),s("code",[a._v("OutOfMemoryError")])])]),a._v(" "),s("tr",[s("td",[a._v("本地方法栈")]),a._v(" "),s("td",[a._v("线程私有")]),a._v(" "),s("td",[s("code",[a._v("StackOverflowError")]),a._v(" 和 "),s("code",[a._v("OutOfMemoryError")])])]),a._v(" "),s("tr",[s("td",[a._v("Java 堆")]),a._v(" "),s("td",[a._v("线程共享")]),a._v(" "),s("td",[s("code",[a._v("OutOfMemoryError")])])]),a._v(" "),s("tr",[s("td",[a._v("方法区")]),a._v(" "),s("td",[a._v("线程共享")]),a._v(" "),s("td",[s("code",[a._v("OutOfMemoryError")])])]),a._v(" "),s("tr",[s("td",[a._v("运行时常量池")]),a._v(" "),s("td",[a._v("线程共享")]),a._v(" "),s("td",[s("code",[a._v("OutOfMemoryError")])])]),a._v(" "),s("tr",[s("td",[a._v("直接内存")]),a._v(" "),s("td",[a._v("非运行时数据区")]),a._v(" "),s("td",[s("code",[a._v("OutOfMemoryError")])])])])]),a._v(" "),s("h2",{attrs:{id:"三、outofmemoryerror"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、outofmemoryerror"}},[a._v("#")]),a._v(" 三、OutOfMemoryError")]),a._v(" "),s("p",[a._v("在 JVM 规范中，"),s("strong",[a._v("除了程序计数器区域外，其他运行时区域都可能发生 "),s("code",[a._v("OutOfMemoryError")]),a._v(" 异常（简称 OOM）")]),a._v("。")]),a._v(" "),s("p",[a._v("下面逐一介绍 OOM 发生场景。")]),a._v(" "),s("h3",{attrs:{id:"java-heap-space"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java-heap-space"}},[a._v("#")]),a._v(" Java heap space")]),a._v(" "),s("p",[s("code",[a._v("java.lang.OutOfMemoryError: Java heap space")]),a._v(" 这个错误意味着："),s("strong",[a._v("堆空间溢出")]),a._v("。")]),a._v(" "),s("p",[a._v("更细致的说法是：Java 堆内存已经达到 "),s("code",[a._v("-Xmx")]),a._v(" 设置的最大值。Java 堆用于存储对象实例，只要不断地创建对象，并且保证 GC Roots 到对象之间有可达路径来避免垃圾收集器回收这些对象，那么当堆空间到达最大容量限制后就会产生 OOM。")]),a._v(" "),s("p",[a._v("堆空间溢出有可能是**"),s("code",[a._v("内存泄漏（Memory Leak）")]),a._v("** 或 "),s("strong",[s("code",[a._v("内存溢出（Memory Overflow）")])]),a._v(" 。需要使用 jstack 和 jmap 生成 threaddump 和 heapdump，然后用内存分析工具（如：MAT）进行分析。")]),a._v(" "),s("h4",{attrs:{id:"java-heap-space-分析步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java-heap-space-分析步骤"}},[a._v("#")]),a._v(" Java heap space 分析步骤")]),a._v(" "),s("ol",[s("li",[a._v("使用 "),s("code",[a._v("jmap")]),a._v(" 或 "),s("code",[a._v("-XX:+HeapDumpOnOutOfMemoryError")]),a._v(" 获取堆快照。")]),a._v(" "),s("li",[a._v("使用内存分析工具（visualvm、mat、jProfile 等）对堆快照文件进行分析。")]),a._v(" "),s("li",[a._v("根据分析图，重点是确认内存中的对象是否是必要的，分清究竟是是内存泄漏（Memory Leak）还是内存溢出（Memory Overflow）。")])]),a._v(" "),s("h4",{attrs:{id:"内存泄漏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存泄漏"}},[a._v("#")]),a._v(" 内存泄漏")]),a._v(" "),s("p",[s("strong",[a._v("内存泄漏是指由于疏忽或错误造成程序未能释放已经不再使用的内存的情况")]),a._v("。")]),a._v(" "),s("p",[a._v("内存泄漏并非指内存在物理上的消失，而是应用程序分配某段内存后，由于设计错误，失去了对该段内存的控制，因而造成了内存的浪费。内存泄漏随着被执行的次数不断增加，最终会导致内存溢出。")]),a._v(" "),s("p",[a._v("内存泄漏常见场景：")]),a._v(" "),s("ul",[s("li",[a._v("静态容器\n"),s("ul",[s("li",[a._v("声明为静态（"),s("code",[a._v("static")]),a._v("）的 "),s("code",[a._v("HashMap")]),a._v("、"),s("code",[a._v("Vector")]),a._v(" 等集合")]),a._v(" "),s("li",[a._v("通俗来讲 A 中有 B，当前只把 B 设置为空，A 没有设置为空，回收时 B 无法回收。因为被 A 引用。")])])]),a._v(" "),s("li",[a._v("监听器\n"),s("ul",[s("li",[a._v("监听器被注册后释放对象时没有删除监听器")])])]),a._v(" "),s("li",[a._v("物理连接\n"),s("ul",[s("li",[a._v("各种连接池建立了连接，必须通过 "),s("code",[a._v("close()")]),a._v(" 关闭链接")])])]),a._v(" "),s("li",[a._v("内部类和外部模块等的引用\n"),s("ul",[s("li",[a._v("发现它的方式同内存溢出，可再加个实时观察")]),a._v(" "),s("li",[s("code",[a._v("jstat -gcutil 7362 2500 70")])])])])]),a._v(" "),s("p",[a._v("重点关注：")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("FGC")]),a._v(" — 从应用程序启动到采样时发生 Full GC 的次数。")]),a._v(" "),s("li",[s("code",[a._v("FGCT")]),a._v(" — 从应用程序启动到采样时 Full GC 所用的时间（单位秒）。")]),a._v(" "),s("li",[s("code",[a._v("FGC")]),a._v(" 次数越多，"),s("code",[a._v("FGCT")]),a._v(" 所需时间越多，越有可能存在内存泄漏。")])]),a._v(" "),s("p",[a._v("如果是内存泄漏，可以进一步查看泄漏对象到 GC Roots 的对象引用链。这样就能找到泄漏对象是怎样与 GC Roots 关联并导致 GC 无法回收它们的。掌握了这些原因，就可以较准确的定位出引起内存泄漏的代码。")]),a._v(" "),s("p",[a._v("导致内存泄漏的常见原因是使用容器，且不断向容器中添加元素，但没有清理，导致容器内存不断膨胀。")]),a._v(" "),s("p",[a._v("【示例】")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * 内存泄漏示例\n * 错误现象：java.lang.OutOfMemoryError: Java heap space\n * VM Args：-verbose:gc -Xms10M -Xmx10M -XX:+HeapDumpOnOutOfMemoryError\n */")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HeapOutOfMemoryDemo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("OomObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" list "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("OomObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("OomObject")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h4",{attrs:{id:"内存溢出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存溢出"}},[a._v("#")]),a._v(" 内存溢出")]),a._v(" "),s("p",[a._v("如果不存在内存泄漏，即内存中的对象确实都必须存活着，则应当检查虚拟机的堆参数（"),s("code",[a._v("-Xmx")]),a._v(" 和 "),s("code",[a._v("-Xms")]),a._v("），与机器物理内存进行对比，看看是否可以调大。并从代码上检查是否存在某些对象生命周期过长、持有时间过长的情况，尝试减少程序运行期的内存消耗。")]),a._v(" "),s("p",[a._v("【示例】")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('/**\n * 堆溢出示例\n * <p>\n * 错误现象：java.lang.OutOfMemoryError: Java heap space\n * <p>\n * VM Args：-verbose:gc -Xms10M -Xmx10M\n *\n * @author <a href="mailto:forbreak@163.com">Zhang Peng</a>\n * @since 2019-06-25\n */')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HeapOutOfMemoryDemo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" array "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("999999999")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"array length = ["')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"]"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("执行 "),s("code",[a._v("java -verbose:gc -Xms10M -Xmx10M -XX:+HeapDumpOnOutOfMemoryError io.github.dunwu.javacore.jvm.memory.HeapMemoryLeakMemoryErrorDemo")])]),a._v(" "),s("p",[a._v("上面的例子是一个极端的例子，试图创建一个维度很大的数组，堆内存无法分配这么大的内存，从而报错："),s("code",[a._v("Java heap space")]),a._v("。")]),a._v(" "),s("p",[a._v("但如果在现实中，代码并没有问题，仅仅是因为堆内存不足，可以通过 "),s("code",[a._v("-Xms")]),a._v(" 和 "),s("code",[a._v("-Xmx")]),a._v(" 适当调整堆内存大小。")]),a._v(" "),s("h3",{attrs:{id:"gc-overhead-limit-exceeded"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gc-overhead-limit-exceeded"}},[a._v("#")]),a._v(" GC overhead limit exceeded")]),a._v(" "),s("p",[s("code",[a._v("java.lang.OutOfMemoryError: GC overhead limit exceeded")]),a._v(" 这个错误，官方给出的定义是："),s("strong",[a._v("超过 "),s("code",[a._v("98%")]),a._v(" 的时间用来做 GC 并且回收了不到 "),s("code",[a._v("2%")]),a._v(" 的堆内存时会抛出此异常")]),a._v("。这意味着，发生在 GC 占用大量时间为释放很小空间的时候发生的，是一种保护机制。导致异常的原因：一般是因为堆太小，没有足够的内存。")]),a._v(" "),s("p",[a._v("【示例】")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * GC overhead limit exceeded 示例\n * 错误现象：java.lang.OutOfMemoryError: GC overhead limit exceeded\n * 发生在GC占用大量时间为释放很小空间的时候发生的，是一种保护机制。导致异常的原因：一般是因为堆太小，没有足够的内存。\n * 官方对此的定义：超过98%的时间用来做GC并且回收了不到2%的堆内存时会抛出此异常。\n * VM Args: -Xms10M -Xmx10M\n */")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("GcOverheadLimitExceededDemo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("List")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Double")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" list "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ArrayList")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("double")]),a._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("d"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("【处理】")]),a._v(" "),s("p",[a._v("与 "),s("strong",[a._v("Java heap space")]),a._v(" 错误处理方法类似，先判断是否存在内存泄漏。如果有，则修正代码；如果没有，则通过 "),s("code",[a._v("-Xms")]),a._v(" 和 "),s("code",[a._v("-Xmx")]),a._v(" 适当调整堆内存大小。")]),a._v(" "),s("h3",{attrs:{id:"permgen-space"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#permgen-space"}},[a._v("#")]),a._v(" PermGen space")]),a._v(" "),s("p",[a._v("【错误】")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("java.lang.OutOfMemoryError: PermGen space\n")])])]),s("p",[a._v("【原因】")]),a._v(" "),s("p",[a._v("Perm （永久代）空间主要用于存放 Class 和 Meta 信息，包括类的名称和字段，带有方法字节码的方法，常量池信息，与类关联的对象数组和类型数组以及即时编译器优化。GC 在主程序运行期间不会对永久代空间进行清理，默认是 64M 大小。")]),a._v(" "),s("p",[a._v("根据上面的定义，可以得出 PermGen 大小要求取决于加载的类的数量以及此类声明的大小。因此，可以说造成该错误的主要原因是永久代中装入了太多的类或太大的类。")]),a._v(" "),s("p",[a._v("在 JDK8 之前的版本中，可以通过 "),s("code",[a._v("-XX:PermSize")]),a._v(" 和 "),s("code",[a._v("-XX:MaxPermSize")]),a._v(" 设置永久代空间大小，从而限制方法区大小，并间接限制其中常量池的容量。")]),a._v(" "),s("h4",{attrs:{id:"初始化时永久代空间不足"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化时永久代空间不足"}},[a._v("#")]),a._v(" 初始化时永久代空间不足")]),a._v(" "),s("p",[a._v("【示例】")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * 永久代内存空间不足示例\n * <p>\n * 错误现象：\n * <ul>\n * <li>java.lang.OutOfMemoryError: PermGen space (JDK8 以前版本)</li>\n * <li>java.lang.OutOfMemoryError: Metaspace (JDK8 及以后版本)</li>\n * </ul>\n * VM Args:\n * <ul>\n * <li>-Xmx100M -XX:MaxPermSize=16M (JDK8 以前版本)</li>\n * <li>-Xmx100M -XX:MaxMetaspaceSize=16M (JDK8 及以后版本)</li>\n * </ul>\n */")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PermOutOfMemoryErrorDemo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Exception")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100_000_000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("generate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"eu.plumbr.demo.Generated"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("generate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Exception")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassPool")]),a._v(" pool "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassPool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getDefault")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" pool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("makeClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("toClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("在此示例中，源代码遍历循环并在运行时生成类。javassist 库正在处理类生成的复杂性。")]),a._v(" "),s("h4",{attrs:{id:"重部署时永久代空间不足"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重部署时永久代空间不足"}},[a._v("#")]),a._v(" 重部署时永久代空间不足")]),a._v(" "),s("p",[a._v("对于更复杂，更实际的示例，让我们逐步介绍一下在应用程序重新部署期间发生的 Permgen 空间错误。重新部署应用程序时，你希望垃圾回收会摆脱引用所有先前加载的类的加载器，并被加载新类的类加载器取代。")]),a._v(" "),s("p",[a._v("不幸的是，许多第三方库以及对线程，JDBC 驱动程序或文件系统句柄等资源的不良处理使得无法卸载以前使用的类加载器。反过来，这意味着在每次重新部署期间，所有先前版本的类仍将驻留在 PermGen 中，从而在每次重新部署期间生成数十兆的垃圾。")]),a._v(" "),s("p",[a._v("让我们想象一个使用 JDBC 驱动程序连接到关系数据库的示例应用程序。启动应用程序时，初始化代码将加载 JDBC 驱动程序以连接到数据库。对应于规范，JDBC 驱动程序向 java.sql.DriverManager 进行注册。该注册包括将对驱动程序实例的引用存储在 DriverManager 的静态字段中。")]),a._v(" "),s("p",[a._v("现在，当从应用程序服务器取消部署应用程序时，java.sql.DriverManager 仍将保留该引用。我们最终获得了对驱动程序类的实时引用，而驱动程序类又保留了用于加载应用程序的 java.lang.Classloader 实例的引用。反过来，这意味着垃圾回收算法无法回收空间。")]),a._v(" "),s("p",[a._v("而且该 java.lang.ClassLoader 实例仍引用应用程序的所有类，通常在 PermGen 中占据数十兆字节。这意味着只需少量重新部署即可填充通常大小的 PermGen。")]),a._v(" "),s("h4",{attrs:{id:"permgen-space-解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#permgen-space-解决方案"}},[a._v("#")]),a._v(" Permgen space 解决方案")]),a._v(" "),s("p",[a._v("（1）解决初始化时的 OutOfMemoryError")]),a._v(" "),s("p",[a._v("在应用程序启动期间触发由于 PermGen 耗尽导致的 "),s("code",[a._v("OutOfMemoryError")]),a._v(" 时，解决方案很简单。该应用程序仅需要更多空间才能将所有类加载到 PermGen 区域，因此我们只需要增加其大小即可。为此，更改你的应用程序启动配置并添加（或增加，如果存在）"),s("code",[a._v("-XX:MaxPermSize")]),a._v(" 参数，类似于以下示例：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("java -XX:MaxPermSize=512m com.yourcompany.YourClass\n")])])]),s("p",[a._v("上面的配置将告诉 JVM，PermGen 可以增长到 512MB。")]),a._v(" "),s("p",[a._v("清理应用程序中 "),s("code",[a._v("WEB-INF/lib")]),a._v(" 下的 jar，用不上的 jar 删除掉，多个应用公共的 jar 移动到 Tomcat 的 lib 目录，减少重复加载。")]),a._v(" "),s("p",[a._v("🔔 注意："),s("code",[a._v("-XX:PermSize")]),a._v(" 一般设为 64M")]),a._v(" "),s("p",[a._v("（2）解决重新部署时的 OutOfMemoryError")]),a._v(" "),s("p",[a._v("重新部署应用程序后立即发生 OutOfMemoryError 时，应用程序会遭受类加载器泄漏的困扰。在这种情况下，解决问题的最简单，继续进行堆转储分析–使用类似于以下命令的重新部署后进行堆转储：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("jmap -dump:format=b,file=dump.hprof <process-id>\n")])])]),s("p",[a._v("然后使用你最喜欢的堆转储分析器打开转储（Eclipse MAT 是一个很好的工具）。在分析器中可以查找重复的类，尤其是那些正在加载应用程序类的类。从那里，你需要进行所有类加载器的查找，以找到当前活动的类加载器。")]),a._v(" "),s("p",[a._v("对于非活动类加载器，你需要通过从非活动类加载器收集到 GC 根的最短路径来确定阻止它们被垃圾收集的引用。有了此信息，你将找到根本原因。如果根本原因是在第三方库中，则可以进入 Google/StackOverflow 查看是否是已知问题以获取补丁/解决方法。")]),a._v(" "),s("p",[a._v("（3）解决运行时 OutOfMemoryError")]),a._v(" "),s("p",[a._v("第一步是检查是否允许 GC 从 PermGen 卸载类。在这方面，标准的 JVM 相当保守-类是天生的。因此，一旦加载，即使没有代码在使用它们，类也会保留在内存中。当应用程序动态创建许多类并且长时间不需要生成的类时，这可能会成为问题。在这种情况下，允许 JVM 卸载类定义可能会有所帮助。这可以通过在启动脚本中仅添加一个配置参数来实现：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-XX:+CMSClassUnloadingEnabled\n")])])]),s("p",[a._v("默认情况下，此选项设置为 false，因此要启用此功能，你需要在 Java 选项中显式设置。如果启用 CMSClassUnloadingEnabled，GC 也会扫描 PermGen 并删除不再使用的类。请记住，只有同时使用 UseConcMarkSweepGC 时此选项才起作用。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-XX:+UseConcMarkSweepGC\n")])])]),s("p",[a._v("在确保可以卸载类并且问题仍然存在之后，你应该继续进行堆转储分析–使用类似于以下命令的方法进行堆转储：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("jmap -dump:file=dump.hprof,format=b <process-id>\n")])])]),s("p",[a._v("然后，使用你最喜欢的堆转储分析器（例如 Eclipse MAT）打开转储，然后根据已加载的类数查找最昂贵的类加载器。从此类加载器中，你可以继续提取已加载的类，并按实例对此类进行排序，以使可疑对象排在首位。")]),a._v(" "),s("p",[a._v("然后，对于每个可疑者，就需要你手动将根本原因追溯到生成此类的应用程序代码。")]),a._v(" "),s("h3",{attrs:{id:"metaspace"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#metaspace"}},[a._v("#")]),a._v(" Metaspace")]),a._v(" "),s("p",[a._v("【错误】")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('Exception in thread "main" java.lang.OutOfMemoryError: Metaspace\n')])])]),s("p",[a._v("【原因】"),s("strong",[a._v("元数据区的内存不足，即方法区和运行时常量池的空间不足")]),a._v("。")]),a._v(" "),s("p",[a._v("方法区用于存放 Class 的相关信息，如类名、访问修饰符、常量池、字段描述、方法描述等。")]),a._v(" "),s("p",[a._v("一个类要被垃圾收集器回收，判定条件是比较苛刻的。在经常动态生成大量 Class 的应用中，需要特别注意类的回收状况。这类常见除了 CGLib 字节码增强和动态语言以外，常见的还有：大量 JSP 或动态产生 JSP 文件的应用（JSP 第一次运行时需要编译为 Java 类）、基于 OSGi 的应用（即使是同一个类文件，被不同的加载器加载也会视为不同的类）等。")]),a._v(" "),s("p",[a._v("【示例】方法区出现 "),s("code",[a._v("OutOfMemoryError")])]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MethodAreaOutOfMemoryDemo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Enhancer")]),a._v(" enhancer "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Enhancer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            enhancer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("setSuperclass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            enhancer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("setUseCache")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            enhancer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("setCallback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MethodInterceptor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Override")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("intercept")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),a._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Method")]),a._v(" method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("MethodProxy")]),a._v(" proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Throwable")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("invokeSuper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            enhancer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Bean")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("【解决】")]),a._v(" "),s("p",[a._v("当由于元空间而面临 OutOfMemoryError 时，第一个解决方案应该是显而易见的。如果应用程序耗尽了内存中的 Metaspace 区域，则应增加 Metaspace 的大小。更改应用程序启动配置并增加以下内容：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("-XX:MaxMetaspaceSize=512m\n")])])]),s("p",[a._v("上面的配置示例告诉 JVM，允许 Metaspace 增长到 512 MB。")]),a._v(" "),s("p",[a._v("另一种解决方案甚至更简单。你可以通过删除此参数来完全解除对 Metaspace 大小的限制，JVM 默认对 Metaspace 的大小没有限制。但是请注意以下事实：这样做可能会导致大量交换或达到本机物理内存而分配失败。")]),a._v(" "),s("h3",{attrs:{id:"unable-to-create-new-native-thread"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unable-to-create-new-native-thread"}},[a._v("#")]),a._v(" Unable to create new native thread")]),a._v(" "),s("p",[s("code",[a._v("java.lang.OutOfMemoryError: Unable to create new native thread")]),a._v(" 这个错误意味着："),s("strong",[a._v("Java 应用程序已达到其可以启动线程数的限制")]),a._v("。")]),a._v(" "),s("p",[a._v("【原因】")]),a._v(" "),s("p",[a._v("当发起一个线程的创建时，虚拟机会在 JVM 内存创建一个 "),s("code",[a._v("Thread")]),a._v(" 对象同时创建一个操作系统线程，而这个系统线程的内存用的不是 JVM 内存，而是系统中剩下的内存。")]),a._v(" "),s("p",[a._v("那么，究竟能创建多少线程呢？这里有一个公式：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("线程数 = (MaxProcessMemory - JVMMemory - ReservedOsMemory) / (ThreadStackSize)\n")])])]),s("p",[a._v("【参数】")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("MaxProcessMemory")]),a._v(" - 一个进程的最大内存")]),a._v(" "),s("li",[s("code",[a._v("JVMMemory")]),a._v(" - JVM 内存")]),a._v(" "),s("li",[s("code",[a._v("ReservedOsMemory")]),a._v(" - 保留的操作系统内存")]),a._v(" "),s("li",[s("code",[a._v("ThreadStackSize")]),a._v(" - 线程栈的大小")])]),a._v(" "),s("p",[s("strong",[a._v("给 JVM 分配的内存越多，那么能用来创建系统线程的内存就会越少，越容易发生 "),s("code",[a._v("unable to create new native thread")])]),a._v("。所以，JVM 内存不是分配的越大越好。")]),a._v(" "),s("p",[a._v("但是，通常导致 "),s("code",[a._v("java.lang.OutOfMemoryError")]),a._v(" 的情况：无法创建新的本机线程需要经历以下阶段：")]),a._v(" "),s("ol",[s("li",[a._v("JVM 内部运行的应用程序请求新的 Java 线程")]),a._v(" "),s("li",[a._v("JVM 本机代码代理为操作系统创建新本机线程的请求")]),a._v(" "),s("li",[a._v("操作系统尝试创建一个新的本机线程，该线程需要将内存分配给该线程")]),a._v(" "),s("li",[a._v("操作系统将拒绝本机内存分配，原因是 32 位 Java 进程大小已耗尽其内存地址空间（例如，已达到（2-4）GB 进程大小限制）或操作系统的虚拟内存已完全耗尽")]),a._v(" "),s("li",[a._v("引发 "),s("code",[a._v("java.lang.OutOfMemoryError: Unable to create new native thread")]),a._v(" 错误。")])]),a._v(" "),s("p",[a._v("【示例】")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("UnableCreateNativeThreadErrorDemo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Runnable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Override")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TimeUnit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("MINUTES"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("catch")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("InterruptedException")]),a._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                        e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("【处理】")]),a._v(" "),s("p",[a._v("可以通过增加操作系统级别的限制来绕过无法创建新的本机线程问题。例如，如果限制了 JVM 可在用户空间中产生的进程数，则应检查出并可能增加该限制：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[root@dev ~]# ulimit -a\ncore file size          (blocks, -c) 0\n--- cut for brevity ---\nmax user processes              (-u) 1800\n")])])]),s("p",[a._v("通常，OutOfMemoryError 对新的本机线程的限制表示编程错误。当应用程序产生数千个线程时，很可能出了一些问题—很少有应用程序可以从如此大量的线程中受益。")]),a._v(" "),s("p",[a._v("解决问题的一种方法是开始进行线程转储以了解情况。")]),a._v(" "),s("h3",{attrs:{id:"直接内存溢出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#直接内存溢出"}},[a._v("#")]),a._v(" 直接内存溢出")]),a._v(" "),s("p",[a._v("由直接内存导致的内存溢出，一个明显的特征是在 Head Dump 文件中不会看见明显的异常，如果发现 OOM 之后 Dump 文件很小，而程序中又直接或间接使用了 NIO，就可以考虑检查一下是不是这方面的原因。")]),a._v(" "),s("p",[a._v("示例：直接内存 "),s("code",[a._v("OutOfMemoryError")])]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * 本机直接内存溢出示例\n * 错误现象：java.lang.OutOfMemoryError\n * VM Args：-Xmx20M -XX:MaxDirectMemorySize=10M\n */")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DirectOutOfMemoryDemo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" _1MB "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1024")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("IllegalAccessException")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Field")]),a._v(" unsafeField "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Unsafe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getDeclaredFields")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        unsafeField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("setAccessible")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Unsafe")]),a._v(" unsafe "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Unsafe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" unsafeField"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("while")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            unsafe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("allocateMemory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("_1MB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h2",{attrs:{id:"四、stackoverflowerror"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、stackoverflowerror"}},[a._v("#")]),a._v(" 四、StackOverflowError")]),a._v(" "),s("p",[a._v("对于 HotSpot 虚拟机来说，栈容量只由 "),s("code",[a._v("-Xss")]),a._v(" 参数来决定如果线程请求的栈深度大于虚拟机所允许的最大深度，将抛出 "),s("code",[a._v("StackOverflowError")]),a._v(" 异常。")]),a._v(" "),s("p",[a._v("从实战来说，栈溢出的常见原因：")]),a._v(" "),s("ul",[s("li",[a._v("递归函数调用层数太深")]),a._v(" "),s("li",[a._v("大量循环或死循环")])]),a._v(" "),s("p",[a._v("示例：递归函数调用层数太深导致 "),s("code",[a._v("StackOverflowError")])]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StackOverflowDemo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" stackLength "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("recursion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        stackLength"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("recursion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StackOverflowDemo")]),a._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StackOverflowDemo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("recursion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("catch")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Throwable")]),a._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"栈深度："')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("stackLength"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[a._v("#")]),a._v(" 参考资料")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://item.jd.com/11252778.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("《深入理解 Java 虚拟机》"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://www.douban.com/doulist/2545443/",target:"_blank",rel:"noopener noreferrer"}},[a._v("从表到里学习 JVM 实现"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://www.jianshu.com/p/28935cbfbae0",target:"_blank",rel:"noopener noreferrer"}},[a._v("作为测试你应该知道的 JAVA OOM 及定位分析"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/sinat_29912455/article/details/51125748",target:"_blank",rel:"noopener noreferrer"}},[a._v("异常、堆内存溢出、OOM 的几种情况"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);