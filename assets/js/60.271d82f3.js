(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{338:function(t,s,a){"use strict";a.r(s);var e=a(11),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"jvm-工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jvm-工具"}},[t._v("#")]),t._v(" JVM 工具")]),t._v(" "),a("blockquote",[a("p",[t._v("Java 程序员免不了故障排查工作，所以经常需要使用一些 JVM 工具。")])]),t._v(" "),a("h2",{attrs:{id:"命令工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令工具"}},[t._v("#")]),t._v(" 命令工具")]),t._v(" "),a("p",[t._v("JDK 自带了一些实用的命令行工具来监控 JVM。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("jps")])]),t._v(" "),a("td",[t._v("显示指定系统内所有的 HotSpot 虚拟机进程。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("jstat")])]),t._v(" "),a("td",[t._v("用于监视虚拟机运行时状态信息，它可以显示出虚拟机进程中的类装载、内存、垃圾收集、JIT 编译等运行数据。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("jmap")])]),t._v(" "),a("td",[t._v("用于生成堆转储快照（一般称为 heapdump 或 dump 文件）。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("jstack")])]),t._v(" "),a("td",[t._v("用于生成 java 虚拟机当前时刻的线程快照（一般称为 threaddump 或 javacore 文件）。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("jhat")])]),t._v(" "),a("td",[t._v("用来分析 jmap 生成的 dump 文件。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("jinfo")])]),t._v(" "),a("td",[t._v("用于实时查看和调整虚拟机运行参数。")])])])]),t._v(" "),a("h3",{attrs:{id:"jps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jps"}},[t._v("#")]),t._v(" jps")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("jps(JVM Process Status Tool) 是虚拟机进程状态工具")]),t._v("。它可以显示指定系统内所有的 HotSpot 虚拟机进程状态信息。jps 通过 RMI 协议查询开启了 RMI 服务的远程虚拟机进程状态。")])]),t._v(" "),a("p",[t._v("命令格式：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("jps "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("option"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("hostid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("如果不指定 hostid 就默认为当前主机或服务器。")]),t._v(" "),a("p",[t._v("常用参数：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("option")]),t._v(" - 选项参数\n"),a("ul",[a("li",[a("code",[t._v("-l")]),t._v(" - 输出主类的全名，如果进程执行的是 jar 包，输出 jar 路径")]),t._v(" "),a("li",[a("code",[t._v("-m")]),t._v(" - 输出 JVM 启动时传递给 main() 的参数")]),t._v(" "),a("li",[a("code",[t._v("-q")]),t._v(" - 只输出 LVMID，省略主类的名称")]),t._v(" "),a("li",[a("code",[t._v("-v")]),t._v(" - 输出 JVM 启动时显示指定的 JVM 参数")])])]),t._v(" "),a("li",[a("code",[t._v("hostid")]),t._v(" - RMI 注册表中注册的主机名。如果不指定 hostid 就默认为当前主机或服务器。")])]),t._v(" "),a("p",[t._v("其中[option]、[hostid]参数也可以不写。")]),t._v(" "),a("p",[t._v("【示例】")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ jps -l -m\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("28920")]),t._v(" org.apache.catalina.startup.Bootstrap start\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11589")]),t._v(" org.apache.catalina.startup.Bootstrap start\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25816")]),t._v(" sun.tools.jps.Jps -l -m\n")])])]),a("h3",{attrs:{id:"jstat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jstat"}},[t._v("#")]),t._v(" jstat")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("jstat(JVM statistics Monitoring)，是虚拟机统计信息监视工具")]),t._v("。jstat 用于监视虚拟机运行时状态信息，它可以显示出虚拟机进程中的类装载、内存、垃圾收集、JIT 编译等运行数据。")])]),t._v(" "),a("p",[t._v("命令格式：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("jstat "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("option"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" VMID "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("interval"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("常用参数：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("option")]),t._v(" - 选项参数，用于指定用户需要查询的虚拟机信息\n"),a("ul",[a("li",[a("code",[t._v("-class")]),t._v(" - 监视类装载、卸载数量、总空间以及类装载所耗费的时间")]),t._v(" "),a("li",[a("code",[t._v("-gc")]),t._v(" - 监视 Java 堆状况，包括 Eden 区、两个 survivor 区、老年代、永久代等区的容量、已用空间、GC 时间合计等信息。")])])]),t._v(" "),a("li",[a("code",[t._v("VMID")]),t._v(" - 如果是本地虚拟机进程，则 VMID 与 LVMID 是一致的；如果是远程虚拟机进程，那 VMID 的格式应当是："),a("code",[t._v("[protocol:][//]lvmid[@hostname[:port]/servername]")])]),t._v(" "),a("li",[a("code",[t._v("interval")]),t._v(" - 查询间隔")]),t._v(" "),a("li",[a("code",[t._v("count")]),t._v(" - 查询次数")])]),t._v(" "),a("blockquote",[a("p",[t._v("【参考】更详细说明可以参考："),a("a",{attrs:{href:"https://www.cnblogs.com/yjd_hycf_space/p/7755633.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("jstat 命令查看 jvm 的 GC 情况"),a("OutboundLink")],1)])]),t._v(" "),a("h4",{attrs:{id:"类加载统计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类加载统计"}},[t._v("#")]),t._v(" 类加载统计")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("jstat -class pid")]),t._v(" 命令可以查看编译统计信息。")]),t._v(" "),a("p",[t._v("【示例】")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ jstat -class "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7129")]),t._v("\nLoaded  Bytes  Unloaded  Bytes     Time\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26749")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50405.3")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("873")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1216.8")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19.75")]),t._v("\n")])])]),a("p",[t._v("【参数】")]),t._v(" "),a("ul",[a("li",[t._v("Loaded - 加载 class 的数量")]),t._v(" "),a("li",[t._v("Bytes - 所占用空间大小")]),t._v(" "),a("li",[t._v("Unloaded - 未加载数量")]),t._v(" "),a("li",[t._v("Bytes - 未加载占用空间")]),t._v(" "),a("li",[t._v("Time - 时间")])]),t._v(" "),a("h4",{attrs:{id:"编译统计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译统计"}},[t._v("#")]),t._v(" 编译统计")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("jstat -compiler pid")]),t._v(" 命令可以查看编译统计信息。")]),t._v(" "),a("p",[t._v("【示例】")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ jstat -compiler "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7129")]),t._v("\nCompiled Failed Invalid   Time   FailedType FailedMethod\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42030")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("302.53")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" org/apache/felix/framework/BundleWiringImpl"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$BundleClassLoader")]),t._v(" findClass\n")])])]),a("p",[t._v("【参数】")]),t._v(" "),a("ul",[a("li",[t._v("Compiled - 编译数量")]),t._v(" "),a("li",[t._v("Failed - 失败数量")]),t._v(" "),a("li",[t._v("Invalid - 不可用数量")]),t._v(" "),a("li",[t._v("Time - 时间")]),t._v(" "),a("li",[t._v("FailedType - 失败类型")]),t._v(" "),a("li",[t._v("FailedMethod - 失败的方法")])]),t._v(" "),a("h4",{attrs:{id:"gc-统计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gc-统计"}},[t._v("#")]),t._v(" GC 统计")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("jstat -gc pid time")]),t._v(" 命令可以查看 GC 统计信息。")]),t._v(" "),a("p",[t._v("【示例】")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ jstat -gc "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("29527")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n S0C    S1C    S0U    S1U      EC       EU        OC         OU       MC     MU    CCSC   CCSU   YGC     YGCT    FGC    FGCT     GCT\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22528.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22016.0")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21388.2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4106752.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("921244.7")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5592576.0")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2086826.5")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("110716.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("103441.1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12416.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11167.7")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3189")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90.057")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.140")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("92.197")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22528.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22016.0")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21388.2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4106752.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("921244.7")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5592576.0")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2086826.5")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("110716.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("103441.1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12416.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11167.7")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3189")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90.057")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.140")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("92.197")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22528.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22016.0")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21388.2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4106752.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("921244.7")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5592576.0")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2086826.5")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("110716.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("103441.1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12416.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11167.7")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3189")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90.057")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.140")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("92.197")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22528.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22016.0")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21388.2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4106752.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("921244.7")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5592576.0")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2086826.5")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("110716.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("103441.1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12416.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11167.7")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3189")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90.057")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.140")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("92.197")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22528.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22016.0")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21388.2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4106752.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("921244.7")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5592576.0")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2086826.5")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("110716.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("103441.1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12416.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11167.7")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3189")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90.057")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.140")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("92.197")]),t._v("\n")])])]),a("p",[t._v("【参数】")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("S0C")]),t._v(" - 第一个 Survivor 区的大小")]),t._v(" "),a("li",[a("code",[t._v("S1C")]),t._v(" - 第二个 Survivor 区的大小")]),t._v(" "),a("li",[a("code",[t._v("S0U")]),t._v(" - 第一个 Survivor 区的使用大小")]),t._v(" "),a("li",[a("code",[t._v("S1U")]),t._v(" - 第二个 Survivor 区的使用大小")]),t._v(" "),a("li",[a("code",[t._v("EC")]),t._v(" - Eden 区的大小")]),t._v(" "),a("li",[a("code",[t._v("EU")]),t._v(" - Eden 区的使用大小")]),t._v(" "),a("li",[a("code",[t._v("TT")]),t._v(" - 对象在新生代存活的次数")]),t._v(" "),a("li",[a("code",[t._v("MTT")]),t._v(" - 对象在新生代存活的最大次数")]),t._v(" "),a("li",[a("code",[t._v("DSS")]),t._v(" - 期望的 Survivor 区的大小")]),t._v(" "),a("li",[a("code",[t._v("YGC")]),t._v(" - 年轻代垃圾回收次数")]),t._v(" "),a("li",[a("code",[t._v("YGCT")]),t._v(" - 年轻代垃圾回收消耗时间")])]),t._v(" "),a("h3",{attrs:{id:"jmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jmap"}},[t._v("#")]),t._v(" jmap")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("jmap(JVM Memory Map) 是 Java 内存映像工具")]),t._v("。jmap 用于生成堆转储快照（一般称为 heapdump 或 dump 文件）。jmap 不仅能生成 dump 文件，还可以查询 "),a("code",[t._v("finalize")]),t._v(" 执行队列、Java 堆和永久代的详细信息，如当前使用率、当前使用的是哪种收集器等。")]),t._v(" "),a("p",[t._v("如果不使用这个命令，还可以使用 "),a("code",[t._v("-XX:+HeapDumpOnOutOfMemoryError")]),t._v(" 参数来让虚拟机出现 OOM 的时候，自动生成 dump 文件。")])]),t._v(" "),a("p",[t._v("命令格式：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("jmap [option] VMID\n")])])]),a("p",[t._v("常用参数：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("option")]),t._v(" - 选项参数\n"),a("ul",[a("li",[a("code",[t._v("-dump")]),t._v(" - 生成堆转储快照")]),t._v(" "),a("li",[a("code",[t._v("-finalizerinfo")]),t._v(" - 显示在 F-Queue 队列等待 Finalizer 线程执行 finalizer 方法的对象")]),t._v(" "),a("li",[a("code",[t._v("-heap")]),t._v(" - 显示 Java 堆详细信息")]),t._v(" "),a("li",[a("code",[t._v("-histo")]),t._v(" - 显示堆中对象的统计信息，包括类、实例数量、合计容量")]),t._v(" "),a("li",[a("code",[t._v("-permstat")]),t._v(" - to print permanent generation statistics")]),t._v(" "),a("li",[a("code",[t._v("-F")]),t._v(" - 当-dump 没有响应时，强制生成 dump 快照")])])])]),t._v(" "),a("p",[t._v("【示例】")]),t._v(" "),a("p",[a("strong",[t._v("（1）生成 heapdump 快照")])]),t._v(" "),a("p",[t._v("dump 堆到文件，format 指定输出格式，live 指明是活着的对象，file 指定文件名")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ jmap -dump:live,format"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("b,file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dump.hprof "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("28920")]),t._v("\nDumping heap to /home/xxx/dump.hprof "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nHeap dump "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" created\n")])])]),a("p",[t._v("dump.hprof 这个后缀是为了后续可以直接用 MAT(Memory Anlysis Tool)等工具打开。")]),t._v(" "),a("p",[a("strong",[t._v("（2）查看实例数最多的类")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ jmap -histo "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("29527")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("head")]),t._v(" -n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("\n\n num     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#instances         #bytes  class name")]),t._v("\n----------------------------------------------\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(":      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13673280")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1438961864")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("C\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(":       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1207166")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("411277184")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("I\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(":       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7382322")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("347307096")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Ljava.lang.Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("（3） 查看指定进程的堆信息")])]),t._v(" "),a("p",[t._v("注意：使用 CMS GC 情况下，"),a("code",[t._v("jmap -heap PID")]),t._v(" 的执行有可能会导致 java 进程挂起。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ ./jmap -heap "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12379")]),t._v("\nAttaching to process ID "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12379")]),t._v(", please wait"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nDebugger attached successfully.\nServer compiler detected.\nJVM version is "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17.0")]),t._v("-b16\n\nusing thread-local object allocation.\nParallel GC with "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" thread"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nHeap Configuration:\n   MinHeapFreeRatio "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v("\n   MaxHeapFreeRatio "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("70")]),t._v("\n   MaxHeapSize      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("83886080")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(".0MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   NewSize          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1310720")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".25MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   MaxNewSize       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17592186044415")]),t._v(" MB\n   OldSize          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5439488")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(".1875MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   NewRatio         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n   SurvivorRatio    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n   PermSize         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20971520")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(".0MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   MaxPermSize      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("88080384")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("84")]),t._v(".0MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nHeap Usage:\nPS Young Generation\nEden Space:\n   capacity "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9306112")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(".875MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   used     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5375360")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(".1263427734375MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3930752")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(".7486572265625MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("57.761608714788736")]),t._v("% used\nFrom Space:\n   capacity "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9306112")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(".875MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   used     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3425240")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(".2665634155273438MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5880872")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(".608436584472656MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("36.80634834397007")]),t._v("% used\nTo Space:\n   capacity "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9306112")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(".875MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   used     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(".0MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9306112")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(".875MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("% used\nPS Old Generation\n   capacity "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("55967744")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("53")]),t._v(".375MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   used     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("48354640")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("46")]),t._v(".11457824707031MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7613104")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(".2604217529296875MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("86.39733629427693")]),t._v("% used\nPS Perm Generation\n   capacity "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("62062592")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("59")]),t._v(".1875MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   used     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60243112")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("57")]),t._v(".452308654785156MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1819480")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".7351913452148438MB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("97.06831451706046")]),t._v("% used\n")])])]),a("h3",{attrs:{id:"jstack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jstack"}},[t._v("#")]),t._v(" jstack")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("jstack(Stack Trace for java) 是 Java 堆栈跟踪工具")]),t._v("。jstack 用于生成 java 虚拟机当前时刻的线程快照（一般称为 threaddump 或 javacore 文件）。")]),t._v(" "),a("p",[a("strong",[t._v("线程快照是当前虚拟机内每一条线程正在执行的方法堆栈的集合，生成线程快照的主要目的是定位线程出现长时间停顿的原因，如线程间死锁、死循环、请求外部资源导致的长时间等待等")]),t._v("。")])]),t._v(" "),a("p",[t._v("线程出现停顿的时候通过 jstack 来查看各个线程的调用堆栈，就可以知道没有响应的线程到底在后台做什么事情，或者等待什么资源。 如果 java 程序崩溃生成 core 文件，jstack 工具可以用来获得 core 文件的 java stack 和 native stack 的信息，从而可以轻松地知道 java 程序是如何崩溃和在程序何处发生问题。另外，jstack 工具还可以附属到正在运行的 java 程序中，看到当时运行的 java 程序的 java stack 和 native stack 的信息, 如果现在运行的 java 程序呈现 hung 的状态，jstack 是非常有用的。")]),t._v(" "),a("p",[t._v("命令格式：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("jstack "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("option"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" vmid\n")])])]),a("p",[t._v("常用参数：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("option")]),t._v(" - 选项参数\n"),a("ul",[a("li",[a("code",[t._v("-F")]),t._v(" - 当正常输出请求不被响应时，强制输出线程堆栈")]),t._v(" "),a("li",[a("code",[t._v("-l")]),t._v(" - 除堆栈外，显示关于锁的附加信息")]),t._v(" "),a("li",[a("code",[t._v("-m")]),t._v(" - 如果调用到本地方法的话，可以显示 C/C++的堆栈")])])])]),t._v(" "),a("p",[t._v("【示例】")]),t._v(" "),a("p",[t._v("（1）找出某 Java 进程中最耗费 CPU 的 Java 线程")]),t._v(" "),a("p",[t._v("a) 找出 Java 进程")]),t._v(" "),a("p",[t._v("假设应用名称为 myapp：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ jps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" myapp\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("29527")]),t._v(" myapp.jar\n")])])]),a("p",[t._v("得到进程 ID 为 21711")]),t._v(" "),a("p",[t._v("b) 找出该进程内最耗费 CPU 的线程，可以使用 "),a("code",[t._v("ps -Lfp pid")]),t._v(" 或者 "),a("code",[t._v("ps -mp pid -o THREAD, tid, time")]),t._v(" 或者 "),a("code",[t._v("top -Hp pid")])]),t._v(" "),a("p",[a("img",{attrs:{src:"http://static.oschina.net/uploads/space/2014/0128/170402_A57i_111708.png",alt:"img"}}),t._v("\nTIME 列就是各个 Java 线程耗费的 CPU 时间，CPU 时间最长的是线程 ID 为 21742 的线程，用")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("printf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%x'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[t._v("\\n")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21742")]),t._v("\n")])])]),a("p",[t._v("得到 21742 的十六进制值为 54ee，下面会用到。")]),t._v(" "),a("p",[t._v("c) 使用 jstack 打印线程堆栈信息")]),t._v(" "),a("p",[t._v("下一步终于轮到 jstack 上场了，它用来输出进程 21711 的堆栈信息，然后根据线程 ID 的十六进制值 grep，如下：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ jstack "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21711")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" 54ee\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PollIntervalRetrySchedulerThread"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("prio")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("tid")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("0x00007f950043e000 "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("nid")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("0x54ee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" Object.wait"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("0x00007f94c6eda000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("可以看到 CPU 消耗在 PollIntervalRetrySchedulerThread 这个类的 Object.wait()，我找了下我的代码，定位到下面的代码：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Idle wait")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLog")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Thread ["')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"] is idle waiting..."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nschedulerThreadState "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PollTaskSchedulerThreadState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IdleWaiting")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" now "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" waitTime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" now "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getIdleWaitTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" timeUntilContinue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" waitTime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" now"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sigLock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("halted"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t\tsigLock"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wait")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeUntilContinue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" ignore"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("它是轮询任务的空闲等待代码，上面的 sigLock.wait(timeUntilContinue) 就对应了前面的 Object.wait()。")]),t._v(" "),a("h3",{attrs:{id:"jhat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jhat"}},[t._v("#")]),t._v(" jhat")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("jhat(JVM Heap Analysis Tool)，是虚拟机堆转储快照分析工具")]),t._v("。jhat 与 jmap 搭配使用，用来分析 jmap 生成的 dump 文件。jhat 内置了一个微型的 HTTP/HTML 服务器，生成 dump 的分析结果后，可以在浏览器中查看。")]),t._v(" "),a("p",[t._v("注意：一般不会直接在服务器上进行分析，因为 jhat 是一个耗时并且耗费硬件资源的过程，一般把服务器生成的 dump 文件，用 jvisualvm 、Eclipse Memory Analyzer、IBM HeapAnalyzer 等工具来分析。")])]),t._v(" "),a("p",[t._v("命令格式：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("jhat "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dumpfile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h3",{attrs:{id:"jinfo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jinfo"}},[t._v("#")]),t._v(" jinfo")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("jinfo(JVM Configuration info)，是 Java 配置信息工具")]),t._v("。jinfo 用于实时查看和调整虚拟机运行参数。")])]),t._v(" "),a("p",[t._v("之前的 "),a("code",[t._v("jps -v")]),t._v(" 口令只能查看到显示指定的参数，如果想要查看未被显示指定的参数的值就要使用 jinfo 口令。")]),t._v(" "),a("p",[t._v("命令格式：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("jinfo "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("option"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" pid\n")])])]),a("p",[t._v("常用参数：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("option")]),t._v(" - 选项参数\n"),a("ul",[a("li",[a("code",[t._v("-flag")]),t._v(" - 输出指定 args 参数的值")]),t._v(" "),a("li",[a("code",[t._v("-sysprops")]),t._v(" - 输出系统属性，等同于 "),a("code",[t._v("System.getProperties()")])])])])]),t._v(" "),a("p",[t._v("【示例】")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ jinfo -sysprops "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("29527")]),t._v("\nAttaching to process ID "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("29527")]),t._v(", please wait"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nDebugger attached successfully.\nServer compiler detected.\nJVM version is "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25.222")]),t._v("-b10\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),a("h2",{attrs:{id:"ui-工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ui-工具"}},[t._v("#")]),t._v(" UI 工具")]),t._v(" "),a("h3",{attrs:{id:"jconsole"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jconsole"}},[t._v("#")]),t._v(" jconsole")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("jconsole(Java Monitoring and Management Console) 是一种基于 JMX 的可视化监视与管理工具")]),t._v("。它的管理功能是针对 JMX MBean 进行管理，由于 MBean 可以使用代码、中间件服务器的管理控制台或所有符合 JMX 规范的软件进行访问。")])]),t._v(" "),a("blockquote",[a("p",[t._v("注意：使用 jconsole 的前提是 Java 应用开启 JMX。")])]),t._v(" "),a("h4",{attrs:{id:"开启-jmx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启-jmx"}},[t._v("#")]),t._v(" 开启 JMX")]),t._v(" "),a("p",[t._v("Java 应用开启 JMX 后，可以使用 "),a("code",[t._v("jconsole")]),t._v(" 或 "),a("code",[t._v("jvisualvm")]),t._v(" 进行监控 Java 程序的基本信息和运行情况。")]),t._v(" "),a("p",[t._v("开启方法是，在 java 指令后，添加以下参数：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dcom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("management"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jmxremote"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dcom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("management"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jmxremote"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ssl"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dcom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("management"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jmxremote"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("authenticate"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Djava")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rmi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hostname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dcom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sun"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("management"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jmxremote"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18888")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("-Djava.rmi.server.hostname")]),t._v(" - 指定 Java 程序运行的服务器")]),t._v(" "),a("li",[a("code",[t._v("-Dcom.sun.management.jmxremote.port")]),t._v(" - 指定 JMX 服务监听端口")])]),t._v(" "),a("h4",{attrs:{id:"连接-jconsole"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连接-jconsole"}},[t._v("#")]),t._v(" 连接 jconsole")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://docs.oracle.com/javase/8/docs/technotes/guides/management/figures/connectadv.gif",alt:"Connecting to a JMX Agent Using the JMX Service URL"}})]),t._v(" "),a("p",[t._v("进入 jconsole 应用后，可以看到以下 tab 页面。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("概述")]),t._v(" - 显示有关 Java VM 和监视值的概述信息。")]),t._v(" "),a("li",[a("code",[t._v("内存")]),t._v(" - 显示有关内存使用的信息。内存页相当于可视化的 "),a("code",[t._v("jstat")]),t._v(" 命令。")]),t._v(" "),a("li",[a("code",[t._v("线程")]),t._v(" - 显示有关线程使用的信息。")]),t._v(" "),a("li",[a("code",[t._v("类")]),t._v(" - 显示有关类加载的信息。")]),t._v(" "),a("li",[a("code",[t._v("VM 摘要")]),t._v(" - 显示有关 Java VM 的信息。")]),t._v(" "),a("li",[a("code",[t._v("MBean")]),t._v(" - 显示有关 MBean 的信息。")])]),t._v(" "),a("h3",{attrs:{id:"jvisualvm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jvisualvm"}},[t._v("#")]),t._v(" jvisualvm")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("jvisualvm(All-In-One Java Troubleshooting Tool) 是多合一故障处理工具")]),t._v("。它支持运行监视、故障处理、性能分析等功能。")])]),t._v(" "),a("blockquote",[a("p",[t._v("注意：使用 jconsole 的前提是 Java 应用开启 JMX。")])]),t._v(" "),a("h3",{attrs:{id:"mat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mat"}},[t._v("#")]),t._v(" MAT")]),t._v(" "),a("p",[t._v("MAT 即 Eclipse Memory Analyzer Tool 的缩写。")]),t._v(" "),a("p",[t._v("MAT 可以独立安装（"),a("a",{attrs:{href:"http://www.eclipse.org/mat/downloads.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方下载地址"),a("OutboundLink")],1),t._v("），也可以作为 Eclipse IDE 的插件安装。")]),t._v(" "),a("h4",{attrs:{id:"mat-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mat-配置"}},[t._v("#")]),t._v(" MAT 配置")]),t._v(" "),a("p",[t._v("MAT 解压后，安装目录下有个 "),a("code",[t._v("MemoryAnalyzer.ini")]),t._v(" 文件。")]),t._v(" "),a("p",[a("code",[t._v("MemoryAnalyzer.ini")]),t._v(" 中有个重要的参数 "),a("code",[t._v("Xmx")]),t._v(" 表示最大内存，默认为："),a("code",[t._v("-vmargs -Xmx1024m")])]),t._v(" "),a("p",[t._v("如果试图用 MAT 导入的 dump 文件超过 1024 M，会报错：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("An internal error occurred during: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Parsing heap dump from XXX"')]),t._v("\n")])])]),a("p",[t._v("此时，可以适当调整 "),a("code",[t._v("Xmx")]),t._v(" 大小。如果设置的 "),a("code",[t._v("Xmx")]),t._v(" 数值过大，本机内存不足以支撑，启动 MAT 会报错：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Failed to create the Java Virtual Machine\n")])])]),a("h4",{attrs:{id:"mat-分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mat-分析"}},[t._v("#")]),t._v(" MAT 分析")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://dunwu.test.upcdn.net/snap/20200308092746.png",alt:"img"}})]),t._v(" "),a("p",[t._v("点击 Leak Suspects 可以进入内存泄漏页面。")]),t._v(" "),a("p",[t._v("（1）首先，可以查看饼图了解内存的整体消耗情况")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://dunwu.test.upcdn.net/snap/20200308150556.png",alt:"img"}})]),t._v(" "),a("p",[t._v("（2）缩小范围，寻找问题疑似点")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://img-blog.csdn.net/20160223202154818",alt:"img"}})]),t._v(" "),a("p",[t._v("可以点击进入详情页面，在详情页面 Shortest Paths To the Accumulation Point 表示 GC root 到内存消耗聚集点的最短路径，如果某个内存消耗聚集点有路径到达 GC root，则该内存消耗聚集点不会被当做垃圾被回收。")]),t._v(" "),a("p",[t._v("为了找到内存泄露，我获取了两个堆转储文件，两个文件获取时间间隔是一天（因为内存只是小幅度增长，短时间很难发现问题）。对比两个文件的对象，通过对比后的结果可以很方便定位内存泄露。")]),t._v(" "),a("p",[t._v("MAT 同时打开两个堆转储文件，分别打开 Histogram，如下图。在下图中方框 1 按钮用于对比两个 Histogram，对比后在方框 2 处选择 Group By package，然后对比各对象的变化。不难发现 heap3.hprof 比 heap6.hprof 少了 64 个 eventInfo 对象，如果对代码比较熟悉的话想必这样一个结果是能够给程序员一定的启示的。而我也是根据这个启示差找到了最终内存泄露的位置。\n"),a("img",{attrs:{src:"https://img-blog.csdn.net/20160223203226362",alt:"img"}})]),t._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://item.jd.com/11252778.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《深入理解 Java 虚拟机》"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://my.oschina.net/feichexia/blog/196575",target:"_blank",rel:"noopener noreferrer"}},[t._v("JVM 性能调优监控工具 jps、jstack、jmap、jhat、jstat、hprof 使用详解"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://docs.oracle.com/javase/8/docs/technotes/guides/management/jconsole.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("jconsole 官方文档"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/kongzhongqijing/articles/3621441.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("jconsole 工具使用"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/yjd_hycf_space/p/7755633.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("jstat 命令查看 jvm 的 GC 情况"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/wanghuiqi2008/article/details/50724676",target:"_blank",rel:"noopener noreferrer"}},[t._v("利用内存分析工具（Memory Analyzer Tool，MAT）分析 java 项目内存泄露"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);